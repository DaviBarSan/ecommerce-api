spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/checkout
    username: davibarrel
    password: davibarrel-test
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-test-query: select 1
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
        use_sql_comments: true
        jdbc:
          lob:
            non_contextual_creation: true
  cloud:
    schema-registry-client:
      endpoint: http://localhost:8081
      schema:
        avro:
          schema-locations: src/main/resources/avro/CheckoutCreated.avsc
    stream:
      default-binder: kafka
      function:
        definition: checkoutCreated
      kafka:
        binder:
          autoCreateTopics: true
          brokers: localhost:9092
          producer-properties:
            key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            schema.registry.url: http://localhost:8081
          consumer-properties:
            key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            schema.registry.url: http://localhost:8081
            specific.avro.reader: true
      bindings:
        checkoutCreated-out-0:
          destination: streaming.ecommerce.checkout.created
          contentType: application/*+avro
          producer:
            configuration:
              value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            use-native-encoding: true
  kafka:
    properties:
      schema:
        registry:
          url: http://localhost:8081
  application:
    name: checkout-api
server:
  port: 8085