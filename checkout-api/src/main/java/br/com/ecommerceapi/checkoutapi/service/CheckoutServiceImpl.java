package br.com.ecommerceapi.checkoutapi.service;

import br.com.ecommerceapi.checkoutapi.config.CheckoutProducerFactory;
import br.com.ecommerceapi.checkoutapi.controller.CheckoutRequest;
import br.com.ecommerceapi.checkoutapi.entity.CheckoutEntity;
import br.com.ecommerceapi.checkoutapi.event.CheckoutCreatedEvent;
import br.com.ecommerceapi.checkoutapi.repository.CheckoutRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.Optional;
import java.util.UUID;

@Service
@RequiredArgsConstructor
//Once constructor is generated by Lombok, Dependency Injection to its parameters
// automatically wired;
public class CheckoutServiceImpl implements CheckoutService {


    private final CheckoutRepository checkoutRepository;
    private final CheckoutProducerFactory checkoutProducerFactory;

    @Override
    public Optional<CheckoutEntity> create(CheckoutRequest checkoutRequest) {

        String checkoutCode = UUID.randomUUID().toString();
        String status = "Accepted";

        final CheckoutEntity checkoutEntity = CheckoutEntity.builder()
                .code(checkoutCode)
                .status(status)
                .build();

        checkoutProducerFactory.checkoutCreated();

        return Optional.of(checkoutRepository.save(checkoutEntity));
    }

}
